test
library(readr)
pokemon <- read_csv("~/Downloads/pokemon.zip")
pokestats<- data.frame("HP"=pokemon$HP,
"Attack"=pokemon$Attack,
"Defense"=pokemon$Defense,
"Sp Attack"=pokemon$`Sp. Atk`,
"Sp Defense"=pokemon$`Sp. Def`,
"Speed"=pokemon$Speed)
head(pokestats)
pairs(pokestats)
#note outliers in the plots vs HP, are these the same pokemon with special stats.
#can we use a cluster algorithm for this e.g. k-means?
#general clusters form for most stats, what happens if we segregate into types?
#would be good to have evolution stage as a variable
#what level are these pokemon?
pokemon <- readRDS("pokemon.rds")
pokestats<- data.frame("HP"=pokemon$HP,
"Attack"=pokemon$Attack,
"Defense"=pokemon$Defense,
"Sp Attack"=pokemon$`Sp. Atk`,
"Sp Defense"=pokemon$`Sp. Def`,
"Speed"=pokemon$Speed)
head(pokestats)
pairs(pokestats)
#note outliers in the plots vs HP, are these the same pokemon with special stats.
#can we use a cluster algorithm for this e.g. k-means?
#general clusters form for most stats, what happens if we segregate into types?
#would be good to have evolution stage as a variable
#what level are these pokemon?
pokemon
HP
pokestats$HP
max(pokestats$HP)
plot(pokestats$HP)
which.max(pokestats$HP)
pokemon[262)]
pokemon[262]
pokemon[,262]
pokemon[262,]
?which
which(pokestats$HP>200)
pokemon[122;262,]
pokemon[122+262,]
pokemon[c(122,262),]
pokemon[which(pokestats$HP>200),]
pairs(pokestats)
high_def<pokemon[which(pokestats$Defense>200)]
pokemon[which(pokestats$Defense>200)]
pokemon[which(pokestats$Defense>200),]
high_def<-pokemon[which(pokestats$Defense>200),]
plot(pokemon$Attack)
plot(,pokemon$Attack)
plot(pokemon$Attack)
abline(v=150)
abline(h=150)
abline(h=180)
pairs(pokestats)
plot(pokemon$`Sp. Atk`)
abline(h=150)
abline(h=170)
abline(h=180)
plot(pokemon$`Sp. Def`)
abline(h=180)
plot(pokemon$Speed)
abline(h=180)
high_speed<-pokemon[which(pokestats$Speed>170),]
high_HP<-pokemon[which(pokestats$HP>200),]
high_attack<-pokemon[which(pokestats$Attack>180),]
high_defense<-pokemon[which(pokestats$Defense>200),]
high_SpAttack<-pokemon[which(pokestats$Sp.Attack>180),]
high_SpDef<-pokemon[which(pokestats$Sp.Defense>180),]
high_speed<-pokemon[which(pokestats$Speed>170),]
high_stats<-rbind(high_HP,high_attack,high_defense)
high_SpDefense<-pokemon[which(pokestats$Sp.Defense>180),]
high_stats<-rbind(high_HP,high_attack,high_defense,high_SpAttack,high_SpDefense,high_speed)
high_stats
pairs(pokestats)
?pairs
Types<-split(pokemon,pokemon$`Type 1`)
Types
library(twitteR)
install.library(twitteR)
install.library(twitteR)
?install
?instal
??install
Types<-split(pokemon,pokemon$`Type 1`)
Types$Fire
plot(Types$Fire)
pairs(Types$Fire)
Typestats<- data.frame("HP"=Types$HP,
"Attack"=Types$Attack,
"Defense"=Types$Defense,
"Sp Attack"=Types$`Sp. Atk`,
"Sp Defense"=Types$`Sp. Def`,
"Speed"=Types$Speed)
pairs(Typestats)
heads(Typestats)
head(Typestats)
head(Types)
Types$Fire
FireStats<- data.frame("HP"=Types$Fire$HP,
"Attack"=Types$Fire$Attack,
"Defense"=Types$Fire$Defense,
"Sp Attack"=Types$Fire$`Sp. Atk`,
"Sp Defense"=Types$Fire$`Sp. Def`,
"Speed"=Types$Fire$Speed)
Types$Fire
head(FireStats)
pairs(FireStats)
source('~/R/portfolio/pokemon.R', echo=TRUE)
pairs(FireStats)
Types
WaterStats<-data.frame("HP"=Types$Water$HP,
"Attack"=Types$Water$Attack,
"Defense"=Types$Water$Defense,
"Sp Attack"=Types$Water$`Sp. Atk`,
"Sp Defense"=Types$Water$`Sp. Def`,
"Speed"=Types$Water$Speed)
pairs(FireStats)
pairs(WaterStats)
Types<-split(pokemon,pokemon$`Type 1`)
Types[1]
Types[0]
Types[2]
Types[3]
Types
head(Types)
dim(Types)
Types[1]
Types[10]
Types[20]
len(Types)
typeof(Types)
length(Types)
Types[1]
Types[1].
Types[1][3]
Types[1][2]
Types[1]$`Type 1`
Types[1]$Name
Types[1]
Types[[1]
Types[[1]]
Types[[1]]
Types[1]
Types[[1]]$Name
Types[[1]]$`Type 1`
Types[[1]]$`Type 1`[1]
assign(Types[[x]]$`Type 1`[x], Types[[x]], envir=.GlobalEnv)
lapply(seq_along(Y), function(x) {
assign(Types[[x]]$`Type 1`[x], Types[[x]], envir=.GlobalEnv)
}
FireStats<- data.frame("HP"=Types$Fire$HP,
"Attack"=Types$Fire$Attack,
"Defense"=Types$Fire$Defense,
"Sp Attack"=Types$Fire$`Sp. Atk`,
"Sp Defense"=Types$Fire$`Sp. Def`,
"Speed"=Types$Fire$Speed)
pairs(FireStats)
WaterStats<-data.frame("HP"=Types$Water$HP,
"Attack"=Types$Water$Attack,
"Defense"=Types$Water$Defense,
"Sp Attack"=Types$Water$`Sp. Atk`,
"Sp Defense"=Types$Water$`Sp. Def`,
"Speed"=Types$Water$Speed)
pairs(WaterStats)
lapply(seq_along(Y), function(x) {
assign(Types[[x]]$`Type 1`[x], Types[[x]], envir=.GlobalEnv)
}
FireStats<- data.frame("HP"=Types$Fire$HP,
"Attack"=Types$Fire$Attack,
"Defense"=Types$Fire$Defense,
"Sp Attack"=Types$Fire$`Sp. Atk`,
"Sp Defense"=Types$Fire$`Sp. Def`,
"Speed"=Types$Fire$Speed)
pairs(FireStats)
WaterStats<-data.frame("HP"=Types$Water$HP,
"Attack"=Types$Water$Attack,
"Defense"=Types$Water$Defense,
"Sp Attack"=Types$Water$`Sp. Atk`,
"Sp Defense"=Types$Water$`Sp. Def`,
"Speed"=Types$Water$Speed)
pairs(WaterStats)
lapply(seq_along(Types), function(x) {
assign(Types[[x]]$`Type 1`[x], Types[[x]], envir=.GlobalEnv)
}
FireStats<- data.frame("HP"=Types$Fire$HP,
"Attack"=Types$Fire$Attack,
"Defense"=Types$Fire$Defense,
"Sp Attack"=Types$Fire$`Sp. Atk`,
"Sp Defense"=Types$Fire$`Sp. Def`,
"Speed"=Types$Fire$Speed)
pairs(FireStats)
WaterStats<-data.frame("HP"=Types$Water$HP,
"Attack"=Types$Water$Attack,
"Defense"=Types$Water$Defense,
"Sp Attack"=Types$Water$`Sp. Atk`,
"Sp Defense"=Types$Water$`Sp. Def`,
"Speed"=Types$Water$Speed)
pairs(WaterStats)
Types[[1]]$`Type 1`[1]
Types[[1]]$`Type 1`[1]
Types[[1]]$`Type 1`[1]
m <- matrix(data=cbind(rnorm(30, 0), rnorm(30, 2), rnorm(30, 5)), nrow=30, ncol=3)
m
apply(m, 2, mean)
apply(m, 1, mean)
apply(m, 2, function(x) length(x[x<0]))
m <- matrix(data=cbind(rnorm(30, 0), rnorm(30, 2), rnorm(30, 5)), nrow=30, ncol=3)
apply(m, 2, function(x) length(x[x<0]))
sapply(1:3,function(x) x^2)
lapply(1:3,function(x) x^2)
sapply(1:3,function(x) x^2)
sapply(1:3,function(x) mean(m[,x]))
asign(Types[[1]]$`Type 1`[1],Types[[1]])
assign(Types[[1]]$`Type 1`[1],Types[[1]])
bug
"bug"
assign(Types[[1]]$`Type 1`[1],Types[[1]])
Types[[1]]$`Type 1`[1]
Types$Bug
Types[1]
Types[[1]
]
?assign
assign(bug,Types[[1]])
assign("bug",Types[[1]])
bug
assign(Types[[1]]$`Type 1`[1],Types[[1]])
assign(Types[[2]]$`Type 1`[2],Types[[2]])
Types[[2]]
Types[2]
Dark
Types[3]
assign(Types[[3]]$`Type 1`[3],Types[[3]])
Dragon
length(Types)
Types[1]
Types[,1]
Types
for (i in 1:length(Types)){
assign(Types[[i]]$`Type 1`[i],Types[[i]])
}
Fire
Water
Fairy
table(Types)
Normal
?remove
rm(bug)
rm(m)
rm(Typestats)
pairs(Bug$HP,Bug$Attack,Bug$Defense,Bug$`Sp. Atk`,Bug$`Sp. Def`,Bug$Speed)
Bug
Bug$Attack
Bug$Defense
pairs(Bug$HP,Bug$Attack,Bug$Defense,Bug$`Sp. Atk`,Bug$`Sp. Def`,Bug$Speed)
Bug$Defense
pairs(Bug$HP,Bug$Attack,Bug$Defense,Bug$`Sp. Atk`,Bug$`Sp. Def`,Bug$Speed)
pairs(Bug$HP,Bug$Attack,Bug$Defense,Bug$`Sp. Atk`,Bug$`Sp. Def`,Bug$Speed)
pairs(Bug$HP,Bug$Attack,Bug$`Sp. Atk`,Bug$`Sp. Def`,Bug$Speed)
Bug$Defense
pairs(Bug$Attack,Bug$Defense)
pairs(c(Bug$HP,Bug$Attack,Bug$Defense,Bug$`Sp. Atk`,Bug$`Sp. Def`,Bug$Speed))
pairs(Bug$HP,Bug$Attack,Bug$Defense,Bug$`Sp. Atk`,Bug$`Sp. Def`,Bug$Speed)
plot(Bug$Defense)
bug
B\ug
Bug
pairs(Bug$HP,Bug$Attack,Bug$Defense,Bug$`Sp. Atk`,Bug$`Sp. Def`,Bug$Speed)
pairs(Bug
Bug)
pairs(Bug)
for (i in 1:length(Types)){
assign(Types[[i]]$`Type 1`[i],Types[[i]]-Types[[i]]$`Type 1`)
}
for (i in 1:length(Types)){
assign(Types[[i]]$`Type 1`[i],Types[[i]])
}
Bug
pull_stats <- function(x){
data.frame("HP"=x$HP,
"Attack"=x$Attack,
"Defense"=x$Defense,
"Sp Attack"=x$`Sp. Atk`,
"Sp Defense"=x$`Sp. Def`,
"Speed"=x$Speed)
}
pairs(pull_stats(Bug))
pokestats<- pull_stats(pokemon)
head(pokestats)
pairs(pokestats)
pairs(pull_stats(Bug))
pairs(pull_stats(Bug)
pairs(pull_stats(Bug))
runApp(pokemon)
library(shiny)
runApp(pokemon)
library(shiny)
function(input,output){
}
runApp(Pokemon)
pokemon
runApp(Pokemon)
runApp("Pokemon")
shinyUI(fluidPage(
titlePanel("Welcome to Pokemon")
))
runApp("Pokemon")
runApp("Pokemon")
